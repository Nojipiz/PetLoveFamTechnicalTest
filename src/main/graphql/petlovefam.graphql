directive @lazy on FIELD_DEFINITION

scalar ID

type Query {
  """
  Query all the pet owners.
  """
  petOwners: [PetOwner!]!

  """
  Query all the pets.
  Can be filtered based on pet owner.
  """
  pets(petOwnerId: ID): [Pet!]!

  """
  Query all the appointments.
  Can be filtered based on pet owner or incoming appointments.
  """
  veterinaryAppointments(
    petOwnerId: ID
    incommingOnly: Boolean = false
  ): [VeterinaryAppointment!]!
}

type Mutation {
  """
  Create a new pet owner.
  Email must be unique.
  """
  createPetOwner(name: String!, email: String!): PetOwner!

  """
  Create a new pet.
  """
  createPet(
    petOwnerId: ID!
    name: String!
    breed: String!
    birthDate: String!
    pictureUrl: String
  ): Pet!

  """
  Create a new veterinary appointment.
  """
  createVeterinaryAppointment(
    petId: ID!
    date: String!
    type: AppointmentType!
  ): VeterinaryAppointment!
}

# --------------------- Output types ------------------------

type PetOwner {
  id: String!
  name: String!
  email: String!
}

type Pet {
  id: String!
  petOwnerId: String!
  name: String!
  breed: String!
  birthDate: String!
  pictureUrl: String
  owner: PetOwner! @lazy
}

type VeterinaryAppointment {
  id: String!
  petId: String!
  date: String!
  type: AppointmentType!
}

enum AppointmentType {
  CONSULTATION
  VACCINATION
}
